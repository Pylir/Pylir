name: LLVM Trunk Test

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

permissions:
  contents: read
  actions: write

jobs:
  llvm-trunk-test:
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: pwsh

    steps:
      - name: Checkout Pylir
        uses: actions/checkout@v4
        with:
          path: Pylir

      - name: Install Dependencies
        id: dep-install
        uses: ./Pylir/.github/actions/dependencies
        with:
          c-compiler: clang
          cpp-compiler: clang++
          cmake-version: 3.21.7
          ccache-key-append: trunk
          ccache-size: 250M

      - name: Install Python depends
        run: |
          Invoke-expression "$Env:pythonLocation\python -m pip install -r ${{github.workspace}}/Pylir/test/requirements.txt"

      - name: Set .pinned-llvm-revision to main
        run: |
          echo "main" `
          | Out-File -FilePath "${{github.workspace}}/Pylir/.pinned-llvm-revision" -Encoding utf8

      - name: Configure Pylir
        run: |
          cmake -GNinja -Bpylir-build `
            -DCMAKE_BUILD_TYPE=Release `
            -DCMAKE_CXX_COMPILER=clang++ `
            -DCMAKE_C_COMPILER=clang `
            -DPython3_ROOT_DIR="$Env:pythonLocation" -DPython3_FIND_STRATEGY=LOCATION `
            -DCMAKE_C_COMPILER_LAUNCHER=ccache `
            -DCMAKE_EXE_LINKER_FLAGS="-fuse-ld=lld" `
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache `
            -DPYLIR_ENABLE_ASSERTIONS=ON `
            -DPYLIR_INCLUDE_LLVM_BUILD=ON `
            -DCPM_SOURCE_CACHE=~/cpm-cache `
            -S ${{github.workspace}}/Pylir

      - name: Build Pylir
        run: |
          cmake --build pylir-build

      - name: Test
        working-directory: ${{github.workspace}}/pylir-build
        run: ctest --extra-verbose

      - name: Cleanup disk space
        if: always()
        run: |
          Remove-Item -Recurse -Force pylir-build -ErrorAction Ignore
