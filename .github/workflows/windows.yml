name: Windows

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  windows-build:
    runs-on: windows-2022

    steps:

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Ninja
        uses: ashutoshvarma/setup-ninja@v1.1

      - name: Checkout Pylir
        uses: actions/checkout@v3
        with:
          path: Pylir

      - name: Install Python depends
        run: |
          python -m pip install -r ${{github.workspace}}/Pylir/test/requirements.txt

      - name: Install CCache
        uses: hendrikmuhs/ccache-action@v1.2.2
        with:
          max-size: 2G
          key: ${{runner.os}}

      - name: Checkout LLVM
        uses: ./Pylir/.github/actions/llvm-checkout

      - name: Configure LLVM Optimized TableGen
        run: |
          $python = (Get-Command python).Source
          cmake -GNinja -Bllvm-optimized-tblgen `
            -DCMAKE_BUILD_TYPE=Release `
            -DCMAKE_CXX_COMPILER=clang-cl `
            -DCMAKE_C_COMPILER=clang-cl `
            -DLLVM_CCACHE_BUILD=ON `
            -DLLVM_ENABLE_PROJECTS="mlir" `
            -DLLVM_TARGETS_TO_BUILD=host `
            -DLLVM_ENABLE_LLD=ON `
            -DPython3_EXECUTABLE=$python `
            -S ${{github.workspace}}/llvm-project/llvm

      - name: Build LLVM Optimized TableGen
        run: |
          $threads = (Get-CimInstance Win32_ComputerSystem).NumberOfLogicalProcessors
          cmake --build llvm-optimized-tblgen --target mlir-tblgen llvm-tblgen mlir-linalg-ods-yaml-gen --parallel $threads

      - name: Configure LLVM
        run: |
          $python = (Get-Command python).Source
          cmake -GNinja -Bllvm-build `
            -DLLVM_TABLEGEN="$GITHUB_WORKSPACE/llvm-optimized-tblgen/bin/llvm-tblgen" `
            -DMLIR_TABLEGEN="$GITHUB_WORKSPACE/llvm-optimized-tblgen/bin/mlir-tblgen" `
            -DMLIR_LINALG_ODS_YAML_GEN="$GITHUB_WORKSPACE/llvm-optimized-tblgen/bin/mlir-linalg-ods-yaml-gen" `
            -DCMAKE_BUILD_TYPE=Release `
            -DLLVM_USE_CRT_RELEASE=MTd `
            -DCMAKE_CXX_COMPILER=clang-cl `
            -DCMAKE_C_COMPILER=clang-cl `
            -DLLVM_CCACHE_BUILD=ON `
            -DLLVM_ENABLE_ASSERTIONS=ON `
            -DLLVM_ENABLE_PROJECTS="mlir;lld" `
            -DLLVM_TARGETS_TO_BUILD=host `
            -DLLVM_ENABLE_LLD=ON `
            -DPython3_EXECUTABLE=$python `
            -S ${{github.workspace}}/llvm-project/llvm

      - name: Build LLVM
        run: |
          $threads = (Get-CimInstance Win32_ComputerSystem).NumberOfLogicalProcessors
          cmake --build llvm-build --parallel $threads

      - name: Configure Pylir
        run: |
          $python = (Get-Command python).Source
          cmake -GNinja -Bpylir-build `
            -DCMAKE_BUILD_TYPE=Release `
            -DPYLIR_EMBED_LLD=ON `
            -DCMAKE_CXX_COMPILER=clang-cl `
            -DCMAKE_C_COMPILER=clang-cl `
            -DPython3_EXECUTABLE=$python `
            -DCMAKE_C_COMPILER_LAUNCHER=ccache `
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache `
            -DPYLIR_ENABLE_ASSERTIONS=ON `
            -DLLVM_DIR="$GITHUB_WORKSPACE/llvm-build/lib/cmake/llvm/" `
            -DMLIR_DIR="$GITHUB_WORKSPACE/llvm-build/lib/cmake/mlir/" `
            -DLLD_DIR="$GITHUB_WORKSPACE/llvm-build/lib/cmake/lld/" `
            -S ${{github.workspace}}/Pylir

      - name: Build Pylir
        run: |
          $threads = (Get-CimInstance Win32_ComputerSystem).NumberOfLogicalProcessors
          cmake --build pylir-build --parallel $threads

      - name: Test
        working-directory: ${{github.workspace}}/pylir-build
        run: ctest --extra-verbose

