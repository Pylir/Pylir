// Licensed under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

#ifndef PYLIR_TABLEGEN_UTIL
#define PYLIR_TABLEGEN_UTIL

include "mlir/IR/AttrTypeBase.td"

/// Base class for traits serving as implementations of interfaces.
class InterfaceImplementation<InterfaceTrait interface,
  code extraClassDeclaration, code extraClassDefinition>
  : NativeTrait<"", ""> {
  let trait = interface.trait;
  let cppNamespace = interface.cppNamespace;
  let extraConcreteClassDeclaration = extraClassDeclaration;
  let extraConcreteClassDefinition = extraClassDefinition;
}

/// Trait used to automatically `interface` through the code generated by
/// `extraClassDeclaration` and `extraClassDefinition`. Both of these inject
/// code into any Op class they are attached to. The code in
/// `extraClassDeclaration` is put inside the class in the header file, while
/// `extraClassDefinition` is generated in the source file.
/// `extraClassDefinition` may contain `$cppClass` which is later replaced by
/// the class name of the Op this trait is attached to. This allows injecting
/// interface implementations into the class.
class OpInterfaceImplementation<OpInterfaceTrait interface,
  code extraClassDeclaration, code extraClassDefinition>
  : InterfaceImplementation<interface, extraClassDeclaration,
      extraClassDefinition> {
  list<Trait> dependentTraits = [];
}


#endif
