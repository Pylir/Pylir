@LIT_SITE_CFG_IN_HEADER@

import sys

config.host_triple = "@LLVM_HOST_TRIPLE@"
config.target_triple = "@LLVM_TARGET_TRIPLE@"
config.llvm_obj_root = "@LLVM_BINARY_DIR@"
config.llvm_tools_dir = "@LLVM_TOOLS_BINARY_DIR@"
config.llvm_lib_dir = "@LLVM_LIBRARY_DIR@"
config.llvm_targets_to_build = "@LLVM_TARGETS_TO_BUILD@"
config.python_executable = "@Python3_EXECUTABLE@"
config.native_target = "@LLVM_NATIVE_ARCH@"
config.llvm_host_triple = '@LLVM_HOST_TRIPLE@'
config.mlir_obj_root = "@MLIR_BINARY_DIR@"
config.mlir_include_dirs = "@MLIR_INCLUDE_DIRS@"
config.mlir_tools_dir = "@MLIR_TOOLS_BINARY_DIR@"
config.pylir_src_root = "@PYLIR_SOURCE_DIR@"
config.pylir_obj_root = "@PYLIR_BINARY_DIR@"
config.pylir_tools_dir = "@PYLIR_TOOLS_DIR@"
config.pylir_sanitizers = "@PYLIR_SANITIZERS@"
config.pylir_test_exec_flags = "@PYLIR_TEST_EXEC_FLAGS@"

# Support substitution of the tools_dir with user parameters. This is
# used when we can't determine the tool dir at configuration time.
try:
    config.llvm_tools_dir = config.llvm_tools_dir % lit_config.params
except KeyError:
    e = sys.exc_info()[1]
    key, = e.args
    lit_config.fatal("unable to find %r parameter, use '--param=%s=VALUE'" % (key,key))

import lit.llvm
lit.llvm.initialize(lit_config, config)

# Let the main config do the real work.
lit_config.load_config(config, "@PYLIR_SOURCE_DIR@/test/lit.cfg.py")
